#!/usr/bin/env python

#======================================================================#
#
# This script is intended to be used with BLiSo card from
# www.circuitsurgery.co.uk. It does two things:
# - Monitors filesystem usage and turn on LEDs according to the use
# - If any of the buttons is pressed for min 1 second it issues
#   /sbin/poweroff
#
# This is public domain
# Author: Matti Lattu <matti.lattu@iki.fi>
#
#======================================================================#

# Monitor this filesystem
FS_CHECK="/dev/sda1"

import sys
import os
import re
import time
import wiringpi2
import RPi.GPIO as gpio
gpio.setmode(gpio.BCM)
gpio.setwarnings(False)

LED=[0,1,4,7,8,9,10,11]		#List of port numbers connected to LEDs
button=[14,15,17,18,22,23,24,25]	#List of ports connected to buttons
buttonstate=[0,0,0,0,0,0,0,0]	# Initialise button state list	

# set GPIO ports
for n in range(8):
	gpio.setup(LED[n],gpio.OUT)
	gpio.setup(button[n],gpio.IN)

# Sounder
gpio.setup(27,gpio.OUT)

# Turn all LEDs off
def led_all_off ():
	for n in range(8):
		gpio.output(LED[n],False)

# Turn all LEDs on
def led_all_on ():
	for n in range(8):
		gpio.output(LED[n],True)

# Blink all LEDs n times
def led_blink(n):
	for n in range (n):
		led_all_off()
		time.sleep(0.1)
		led_all_on()
		time.sleep(0.1)

# Get filesystem usage percent
def fs_used (fs_path):
	df_output = os.popen('df '+fs_path).read()
	m = re.search(" (\d+)\% ", df_output)
	if m:
		return int(m.groups()[0])
	else:
		return None

# Main program starts here
led_blink(3)
led_all_off()

# Main loop - loop this forever
while True:
	# Sleep for one second
	time.sleep(1)

	# Turn LEDs on according to used disk size
	used = float(fs_used(FS_CHECK))
	leds = int((used/100)*8)
	for n in range(8):
		if n == 0:
			# First LED is always on
			gpio.output(LED[n], True)
		elif n <= leds:
			# Turn this ON
			gpio.output(LED[n], True)
		else:
			# LED off
			gpio.output(LED[n], False)

	# Check for buttons
	for n in range(8):
		if gpio.input(button[n]) == False:
			# Button pressed, start shutdown
			print "Shutdown!"
			led_blink(20)
			sd_output = os.popen('/sbin/poweroff').read()


